{
    "id": "/providers/Microsoft.Logic/galleries/public/templates/312e65c9c3c94a348f4ccabc084230a6",
    "type": "Microsoft.Logic/galleries/templates",
    "name": "312e65c9c3c94a348f4ccabc084230a6",
    "properties": {
        "author": {
            "displayName": "Kevin Monpara"
        },
        "categoryNames": [
            "enterprise_integration"
        ],

        "description": "Import zip files from Blob Storage into Dynamics 365 for Finance and Operations",

        "displayName": "Blob Storage To Dynamics 365 Import",

        "definition": {
              "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
              "contentVersion": "1.0.0.0",
              "parameters": {
                "logicAppName": {
                  "type": "string",
                  "defaultValue": "BlobStorageToD365",
                  "metadata": {
                    "description": "Name of the Logic App."
                  }
                },
                "logicAppLocation": {
                  "type": "string",
                  "defaultValue": "[resourceGroup().location]",
                  "allowedValues": [
                    "[resourceGroup().location]",
                    "eastasia",
                    "southeastasia",
                    "centralus",
                    "eastus",
                    "eastus2",
                    "westus",
                    "northcentralus",
                    "southcentralus",
                    "northeurope",
                    "westeurope",
                    "japanwest",
                    "japaneast",
                    "brazilsouth",
                    "australiaeast",
                    "australiasoutheast",
                    "westcentralus",
                    "westus2"
                  ],
                  "metadata": {
                    "description": "Location of the Logic App."
                  }
                },
                "Initiate_Package_Import-URI": {
                  "type": "string",
                  "defaultValue": "https://[YOUR_D365_INSTANCE_HERE].dynamics.com/data/DataManagementDefinitionGroups/Microsoft.Dynamics.DataEntities.ImportFromPackage"
                },
                "Initiate_Package_Import-Audience": {
                  "type": "string",
                  "defaultValue": "https://[YOUR_D365_INSTANCE_HERE].dynamics.com"
                },
                "Initiate_Package_Import-Authority": {
                  "type": "string",
                  "defaultValue": null
                },
                "Initiate_Package_Import-ClientId": {
                  "type": "string",
                  "defaultValue": "client_id_here"
                },
                "Initiate_Package_Import-Secret": {
                  "type": "string",
                  "defaultValue": "secret_key_here"
                },
                "Initiate_Package_Import-Tenant": {
                  "type": "string",
                  "defaultValue": "microsoft.com"
                },
                "Get_Execution_Results-URI": {
                  "type": "string",
                  "defaultValue": "https://[YOUR_D365_INSTANCE_HERE].dynamics.com/data/DataManagementDefinitionGroups/Microsoft.Dynamics.DataEntities.GetExecutionSummaryStatus"
                },
                "Get_Execution_Results-Audience": {
                  "type": "string",
                  "defaultValue": "https://[YOUR_D365_INSTANCE_HERE].dynamics.com"
                },
                "Get_Execution_Results-Authority": {
                  "type": "string",
                  "defaultValue": null
                },
                "Get_Execution_Results-ClientId": {
                  "type": "string",
                  "defaultValue": "client_id_here"
                },
                "Get_Execution_Results-Secret": {
                  "type": "string",
                  "defaultValue": "secret_key_here"
                },
                "Get_Execution_Results-Tenant": {
                  "type": "string",
                  "defaultValue": "microsoft.com"
                },
                "When_zip_file_is_added_to_folderFrequency": {
                  "type": "string",
                  "defaultValue": "Hour"
                },
                "When_zip_file_is_added_to_folderInterval": {
                  "type": "int",
                  "defaultValue": 3
                },
                "azureblob_name": {
                  "type": "string",
                  "defaultValue": "azureblob"
                },
                "azureblob_displayName": {
                  "type": "string",
                  "defaultValue": "get-files-to-be-processed"
                },
                "azureblob_accountName": {
                  "type": "string",
                  "defaultValue": "",
                  "metadata": {
                    "description": "Name of the storage account the connector should use."
                  }
                },
                "office365-2_name": {
                  "type": "string",
                  "defaultValue": "office365-2"
                },
                "office365-2_displayName": {
                  "type": "string",
                  "defaultValue": "youremail@here.com"
                }
              },
              "variables": {},
              "resources": [
                {
                  "type": "Microsoft.Logic/workflows",
                  "apiVersion": "2016-06-01",
                  "name": "[parameters('logicAppName')]",
                  "location": "[parameters('logicAppLocation')]",
                  "dependsOn": [
                    "[resourceId('Microsoft.Web/connections', parameters('azureblob_name'))]",
                    "[resourceId('Microsoft.Web/connections', parameters('office365-2_name'))]"
                  ],
                  "properties": {
                    "definition": {
                      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                      "contentVersion": "1.0.0.0",
                      "parameters": {
                        "$connections": {
                          "defaultValue": {},
                          "type": "Object"
                        }
                      },
                      "triggers": {
                        "When_zip_file_is_added_to_folder": {
                          "recurrence": {
                            "frequency": "[parameters('When_zip_file_is_added_to_folderFrequency')]",
                            "interval": "[parameters('When_zip_file_is_added_to_folderInterval')]"
                          },
                          "splitOn": "@triggerBody()",
                          "metadata": {
                            "JTJmemlwLWZpbGVz": "/zip-files"
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/datasets/default/triggers/batch/onupdatedfile",
                            "queries": {
                              "folderId": "JTJmemlwLWZpbGVz",
                              "maxFileCount": 1
                            }
                          }
                        }
                      },
                      "actions": {
                        "Copy_file_to_processing_folder": {
                          "runAfter": {},
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/datasets/default/copyFile",
                            "queries": {
                              "destination": "/processing/@{triggerBody()?['Name']}",
                              "overwrite": true,
                              "queryParametersSingleEncoded": true,
                              "source": "@triggerBody()?['Path']"
                            }
                          }
                        },
                        "Create_SAS_URI_by_path": {
                          "runAfter": {
                            "Delete_file_from_original_folder": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "body": {
                              "Permissions": "Read"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/datasets/default/CreateSharedLinkByPath",
                            "queries": {
                              "path": "@body('Copy_file_to_processing_folder')?['Path']"
                            }
                          }
                        },
                        "Delete_file_from_original_folder": {
                          "runAfter": {
                            "Copy_file_to_processing_folder": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                              }
                            },
                            "method": "delete",
                            "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent(triggerBody()?['Id']))}"
                          }
                        },
                        "Delete_file_from_processing_folder": {
                          "runAfter": {
                            "Move_file_to_folder_based_on_execution_success": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                              }
                            },
                            "method": "delete",
                            "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent(body('Copy_file_to_processing_folder')?['Path']))}"
                          }
                        },
                        "Initiate_Package_Import": {
                          "runAfter": {
                            "Create_SAS_URI_by_path": [
                              "Succeeded"
                            ]
                          },
                          "type": "Http",
                          "inputs": {
                            "authentication": {
                              "audience": "[parameters('Initiate_Package_Import-Audience')]",
                              "clientId": "[parameters('Initiate_Package_Import-ClientId')]",
                              "secret": "[parameters('Initiate_Package_Import-Secret')]",
                              "tenant": "[parameters('Initiate_Package_Import-Tenant')]",
                              "type": "ActiveDirectoryOAuth",
                              "authority": "[parameters('Initiate_Package_Import-Authority')]"
                            },
                            "body": {
                              "definitionGroupId": "Import_test_02",
                              "execute": true,
                              "executionId": "",
                              "legalEntityId": "USMF",
                              "overwrite": true,
                              "packageUrl": "@body('Create_SAS_URI_by_path')?['WebUrl']"
                            },
                            "method": "POST",
                            "uri": "[parameters('Initiate_Package_Import-URI')]"
                          }
                        },
                        "Move_file_to_folder_based_on_execution_success": {
                          "runAfter": {
                            "Wait_For_Execution_Results": [
                              "Succeeded"
                            ]
                          },
                          "cases": {
                            "PartiallySuceeded": {
                              "case": "PartiallySucceeded",
                              "actions": {
                                "Copy_file_to_partiallysucceeded_folder": {
                                  "runAfter": {},
                                  "type": "ApiConnection",
                                  "inputs": {
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                      }
                                    },
                                    "method": "post",
                                    "path": "/datasets/default/copyFile",
                                    "queries": {
                                      "destination": "/partiallysucceeded/@{body('Copy_file_to_processing_folder')?['Name']}",
                                      "overwrite": true,
                                      "queryParametersSingleEncoded": true,
                                      "source": "@body('Copy_file_to_processing_folder')?['Path']"
                                    }
                                  }
                                }
                              }
                            },
                            "Succeeded": {
                              "case": "Succeeded",
                              "actions": {
                                "Copy_file_to_succeeded_folder": {
                                  "runAfter": {},
                                  "type": "ApiConnection",
                                  "inputs": {
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                      }
                                    },
                                    "method": "post",
                                    "path": "/datasets/default/copyFile",
                                    "queries": {
                                      "destination": "/succeeded/@{body('Copy_file_to_processing_folder')?['Name']}",
                                      "overwrite": true,
                                      "queryParametersSingleEncoded": true,
                                      "source": "@body('Copy_file_to_processing_folder')?['Path']"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "default": {
                            "actions": {
                              "Copy_file_to_failed_folder": {
                                "runAfter": {},
                                "type": "ApiConnection",
                                "inputs": {
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "path": "/datasets/default/copyFile",
                                  "queries": {
                                    "destination": "/failed/@{body('Copy_file_to_processing_folder')?['Name']}",
                                    "overwrite": true,
                                    "queryParametersSingleEncoded": true,
                                    "source": "@body('Copy_file_to_processing_folder')?['Path']"
                                  }
                                }
                              }
                            }
                          },
                          "expression": "@body('Get_Execution_Results')['value']",
                          "type": "Switch"
                        },
                        "Send_email_if_API_returns_an_error": {
                          "runAfter": {
                            "Initiate_Package_Import": [
                              "Failed"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "body": {
                              "Body": "D365 Import has failed using the API in Logic App BlobStorageToD365.\n\nFilename: @{body('Copy_file_to_processing_folder')?['Name']}",
                              "Subject": "Logic App Failure",
                              "To": "youremail@here.com"
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['office365']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/Mail"
                          }
                        },
                        "Wait_For_Execution_Results": {
                          "actions": {
                            "Delay": {
                              "runAfter": {
                                "Get_Execution_Results": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Wait",
                              "inputs": {
                                "interval": {
                                  "count": 15,
                                  "unit": "Second"
                                }
                              }
                            },
                            "Get_Execution_Results": {
                              "runAfter": {},
                              "type": "Http",
                              "inputs": {
                                "authentication": {
                                  "audience": "[parameters('Get_Execution_Results-Audience')]",
                                  "clientId": "[parameters('Get_Execution_Results-ClientId')]",
                                  "secret": "[parameters('Get_Execution_Results-Secret')]",
                                  "tenant": "[parameters('Get_Execution_Results-Tenant')]",
                                  "type": "ActiveDirectoryOAuth",
                                  "authority": "[parameters('Get_Execution_Results-Authority')]"
                                },
                                "body": {
                                  "executionId": "@body('Initiate_Package_Import')['value']"
                                },
                                "method": "POST",
                                "uri": "[parameters('Get_Execution_Results-URI')]"
                              }
                            }
                          },
                          "runAfter": {
                            "Initiate_Package_Import": [
                              "Succeeded"
                            ]
                          },
                          "expression": "@or(equals(body('Get_Execution_Results')?['value'], 'Succeeded'), equals(body('Get_Execution_Results')?['value'], 'PartiallySucceeded'), equals(body('Get_Execution_Results')?['value'], 'Canceled'), equals(body('Get_Execution_Results')?['value'], 'Failed'))",
                          "limit": {
                            "count": 60,
                            "timeout": "PT1H"
                          },
                          "type": "Until"
                        }
                      },
                      "outputs": {}
                    },
                    "parameters": {
                      "$connections": {
                        "defaultValue": {},
                        "type": "Object"
                      }
                    }
                  }
                },
                {
                  "type": "Microsoft.Web/connections",
                  "apiVersion": "2016-06-01",
                  "location": "[parameters('logicAppLocation')]",
                  "name": "[parameters('office365-2_name')]",
                  "properties": {
                    "api": {
                      "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/office365')]"
                    },
                    "displayName": "[parameters('office365-2_displayName')]",
                    "parameterValues": {}
                  }
                },
                {
                  "type": "Microsoft.Web/connections",
                  "apiVersion": "2016-06-01",
                  "location": "[parameters('logicAppLocation')]",
                  "name": "[parameters('azureblob_name')]",
                  "properties": {
                    "api": {
                      "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/azureblob')]"
                    },
                    "displayName": "[parameters('azureblob_displayName')]",
                    "parameterValues": {
                      "accountName": "[parameters('azureblob_accountName')]",
                      "accessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('azureblob_accountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
                    }
                  }
                }
              ],
              "outputs": {}
            }
            ,

        "connectionReferences": {
            "azureblob": {
                "connection": {
                    "id": ""
                },
                "api": {
                    "id": "/subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/azureblob"
                }
            },
            "office365-2": {
                "connection": {
                    "id": ""
                },
                "api": {
                    "id": "/subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/office365"
                }
            }

        },

        "apiSummaries": [
            {
                "type": "",
                "displayName": "",
                "iconUri": "",
                "brandColor": ""
            }
        ],

        "changedTime": "2000-08-14T00:00:00.000Z",

        "createdTime": "2018-08-14T00:00:00.000Z",

        "popularity": 99

    }

}